
docker network ls - shows networks 
docker network inspect <name of network to inspect>- insoects a newtowk  
docker network create <name of network> -- Creates a network with a driver bridge which is the default driver
docker network create --driver  - creates a network  
docker network connect - Attach a network to a container 
docker network disconnect - Detach a network from container on a specific virtual network 

docker container run -d --name new_nginx --network <name of network created> nginx  - creats a new container and adds it to a network   

docker container inspect --format '{{ .NetworkSettings.IPAddress }}' < container name > - To know the IP address of a container  

What are the networkig types that docker support 
- Bridge 
- host 
- ipvlan 
- macvlan 
- null 
- overlay 

The moment a new network or bridge is created, a new LAN card with it's custom gateway. 

network uses TAP (used for transmitting packages from one LAN card to another) to connect to a container.

# To create a container with custom IP address, hostname and port

docker network create --subnet=99.99.0.0/24 --driver=bridge net1
docker run -d --name=c2 --network=net1 --ip=99.99.0.99 --hostname=samosa -p
9091:80 httpd  

curl http://localhost:9091 - To see the content of the html file  

DOcker networking subsystem is pluggable using drivers 

bridge: the default network driver 
host: For standalone containers, remove network isolation between the container and the Docker host, and use the 
host's networking directly
none: for this container, disable all networking 

filter is used for port forwarding
if you want to mask ip from the outside world, use Nat tables

to install bridge utils 
apt-get install bridge-utils 
